// <auto-generated />
using System;
using GastosHogarAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GastosHogarAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GastosHogarAPI.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Color")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasDefaultValue("#757575");

                    b.Property<string>("Emoji")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("📝");

                    b.Property<bool>("EsPredeterminada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int?>("GrupoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TotalGastado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("VecesUsada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("EsPredeterminada")
                        .HasDatabaseName("IX_Categoria_EsPredeterminada");

                    b.HasIndex("GrupoId");

                    b.HasIndex("Nombre", "GrupoId")
                        .IsUnique()
                        .HasDatabaseName("IX_Categoria_Nombre_GrupoId")
                        .HasFilter("[GrupoId] IS NOT NULL");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activa = true,
                            Color = "#4CAF50",
                            Emoji = "🛒",
                            EsPredeterminada = true,
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Alimentación",
                            TotalGastado = 0m,
                            VecesUsada = 0
                        },
                        new
                        {
                            Id = 2,
                            Activa = true,
                            Color = "#2196F3",
                            Emoji = "🚗",
                            EsPredeterminada = true,
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Transporte",
                            TotalGastado = 0m,
                            VecesUsada = 0
                        },
                        new
                        {
                            Id = 3,
                            Activa = true,
                            Color = "#FF9800",
                            Emoji = "💡",
                            EsPredeterminada = true,
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Servicios",
                            TotalGastado = 0m,
                            VecesUsada = 0
                        },
                        new
                        {
                            Id = 4,
                            Activa = true,
                            Color = "#E91E63",
                            Emoji = "🎬",
                            EsPredeterminada = true,
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Entretenimiento",
                            TotalGastado = 0m,
                            VecesUsada = 0
                        },
                        new
                        {
                            Id = 5,
                            Activa = true,
                            Color = "#009688",
                            Emoji = "⚕️",
                            EsPredeterminada = true,
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Salud",
                            TotalGastado = 0m,
                            VecesUsada = 0
                        },
                        new
                        {
                            Id = 6,
                            Activa = true,
                            Color = "#795548",
                            Emoji = "🏠",
                            EsPredeterminada = true,
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Hogar",
                            TotalGastado = 0m,
                            VecesUsada = 0
                        },
                        new
                        {
                            Id = 7,
                            Activa = true,
                            Color = "#9C27B0",
                            Emoji = "👕",
                            EsPredeterminada = true,
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Ropa",
                            TotalGastado = 0m,
                            VecesUsada = 0
                        },
                        new
                        {
                            Id = 8,
                            Activa = true,
                            Color = "#3F51B5",
                            Emoji = "📚",
                            EsPredeterminada = true,
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Educación",
                            TotalGastado = 0m,
                            VecesUsada = 0
                        },
                        new
                        {
                            Id = 9,
                            Activa = true,
                            Color = "#607D8B",
                            Emoji = "💻",
                            EsPredeterminada = true,
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Tecnología",
                            TotalGastado = 0m,
                            VecesUsada = 0
                        },
                        new
                        {
                            Id = 10,
                            Activa = true,
                            Color = "#FF5722",
                            Emoji = "🎁",
                            EsPredeterminada = true,
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Regalos",
                            TotalGastado = 0m,
                            VecesUsada = 0
                        },
                        new
                        {
                            Id = 11,
                            Activa = true,
                            Color = "#CDDC39",
                            Emoji = "✈️",
                            EsPredeterminada = true,
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Viajes",
                            TotalGastado = 0m,
                            VecesUsada = 0
                        },
                        new
                        {
                            Id = 12,
                            Activa = true,
                            Color = "#757575",
                            Emoji = "📝",
                            EsPredeterminada = true,
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Otros",
                            TotalGastado = 0m,
                            VecesUsada = 0
                        });
                });

            modelBuilder.Entity("GastosHogarAPI.Models.CuotaPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("ComprobantePago")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("Confirmado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValue("Pendiente");

                    b.Property<DateTime?>("FechaConfirmacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("MetodoPago")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NotasPago")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("NumeroCuota")
                        .HasColumnType("int");

                    b.Property<int>("PlanPagoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Estado", "FechaVencimiento")
                        .HasDatabaseName("IX_CuotaPago_Estado_Vencimiento");

                    b.HasIndex("PlanPagoId", "NumeroCuota")
                        .IsUnique()
                        .HasDatabaseName("IX_CuotaPago_Plan_Numero");

                    b.ToTable("CuotasPago");
                });

            modelBuilder.Entity("GastosHogarAPI.Models.DispositivoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaVinculacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("NombreDispositivo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TipoDispositivo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UltimoAcceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("VersionSO")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId", "DeviceId")
                        .IsUnique()
                        .HasDatabaseName("IX_DispositivoUsuario_Usuario_Device");

                    b.ToTable("DispositivosUsuario");
                });

            modelBuilder.Entity("GastosHogarAPI.Models.EstadoMensual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AcreedorId")
                        .HasColumnType("int");

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmacionesUsuarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeudorId")
                        .HasColumnType("int");

                    b.Property<string>("EstadoPago")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("pendiente");

                    b.Property<DateTime?>("FechaLiquidacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<bool>("LiquidacionCalculada")
                        .HasColumnType("bit");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<string>("MetodoPago")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("MontoDeuda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<int?>("PlanPagoId")
                        .HasColumnType("int");

                    b.Property<bool>("TodosConfirmaron")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AcreedorId");

                    b.HasIndex("PlanPagoId")
                        .IsUnique()
                        .HasFilter("[PlanPagoId] IS NOT NULL");

                    b.HasIndex("DeudorId", "AcreedorId")
                        .HasDatabaseName("IX_EstadoMensual_Deudor_Acreedor");

                    b.HasIndex("GrupoId", "EstadoPago")
                        .HasDatabaseName("IX_EstadoMensual_Grupo_Estado");

                    b.HasIndex("GrupoId", "Mes", "Año")
                        .IsUnique()
                        .HasDatabaseName("IX_EstadoMensual_Grupo_Mes_Año");

                    b.ToTable("EstadoMensual");
                });

            modelBuilder.Entity("GastosHogarAPI.Models.Gasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("EsDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("FechaFoto")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("FotoTicket")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Importe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double?>("Latitud")
                        .HasColumnType("float");

                    b.Property<double?>("Longitud")
                        .HasColumnType("float");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<string>("NombreFotoTicket")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Notas")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("TamañoFoto")
                        .HasColumnType("bigint");

                    b.Property<string>("Tienda")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId")
                        .HasDatabaseName("IX_Gasto_CategoriaId");

                    b.HasIndex("UsuarioId", "Fecha")
                        .HasDatabaseName("IX_Gasto_Usuario_Fecha");

                    b.HasIndex("GrupoId", "Mes", "Año")
                        .HasDatabaseName("IX_Gasto_Grupo_Mes_Año");

                    b.ToTable("Gastos");
                });

            modelBuilder.Entity("GastosHogarAPI.Models.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("CodigoInvitacion")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("CreadorId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TotalGastado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("TotalLiquidaciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("UltimaActividad")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CodigoInvitacion")
                        .IsUnique()
                        .HasDatabaseName("IX_Grupo_CodigoInvitacion");

                    b.HasIndex("CreadorId")
                        .HasDatabaseName("IX_Grupo_CreadorId");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("GastosHogarAPI.Models.PlanPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcreedorId")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("Completado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("CuotasPagadas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DeudorId")
                        .HasColumnType("int");

                    b.Property<int>("DiasFrecuencia")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoMensualId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCompletado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime>("FechaPrimeraCuota")
                        .HasColumnType("datetime2");

                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoCuota")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoPagado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("MontoRestante")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Motivo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NumeroCuotas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AcreedorId", "Completado")
                        .HasDatabaseName("IX_PlanPago_Acreedor_Completado");

                    b.HasIndex("DeudorId", "Completado")
                        .HasDatabaseName("IX_PlanPago_Deudor_Completado");

                    b.HasIndex("GrupoId", "Activo")
                        .HasDatabaseName("IX_PlanPago_Grupo_Activo");

                    b.ToTable("PlanesPago");
                });

            modelBuilder.Entity("GastosHogarAPI.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ColorPersonalizado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasDefaultValue("#2196F3");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<byte[]>("FotoPerfil")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FotoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("GastosCreados")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("GoogleId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("GrupoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("TotalGastado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("TotalPagado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("UltimoAcceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Usuario_Email");

                    b.HasIndex("GoogleId")
                        .HasDatabaseName("IX_Usuario_GoogleId")
                        .HasFilter("[GoogleId] IS NOT NULL");

                    b.HasIndex("GrupoId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GastosHogarAPI.Models.Categoria", b =>
                {
                    b.HasOne("GastosHogarAPI.Models.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("GastosHogarAPI.Models.CuotaPago", b =>
                {
                    b.HasOne("GastosHogarAPI.Models.PlanPago", "PlanPago")
                        .WithMany("Cuotas")
                        .HasForeignKey("PlanPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanPago");
                });

            modelBuilder.Entity("GastosHogarAPI.Models.DispositivoUsuario", b =>
                {
                    b.HasOne("GastosHogarAPI.Models.Usuario", "Usuario")
                        .WithMany("Dispositivos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GastosHogarAPI.Models.EstadoMensual", b =>
                {
                    b.HasOne("GastosHogarAPI.Models.Usuario", "Acreedor")
                        .WithMany()
                        .HasForeignKey("AcreedorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GastosHogarAPI.Models.Usuario", "Deudor")
                        .WithMany()
                        .HasForeignKey("DeudorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GastosHogarAPI.Models.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GastosHogarAPI.Models.PlanPago", "PlanPago")
                        .WithOne()
                        .HasForeignKey("GastosHogarAPI.Models.EstadoMensual", "PlanPagoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Acreedor");

                    b.Navigation("Deudor");

                    b.Navigation("Grupo");

                    b.Navigation("PlanPago");
                });

            modelBuilder.Entity("GastosHogarAPI.Models.Gasto", b =>
                {
                    b.HasOne("GastosHogarAPI.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GastosHogarAPI.Models.Grupo", "Grupo")
                        .WithMany("Gastos")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GastosHogarAPI.Models.Usuario", "Usuario")
                        .WithMany("Gastos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Grupo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GastosHogarAPI.Models.Grupo", b =>
                {
                    b.HasOne("GastosHogarAPI.Models.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("CreadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Creador");
                });

            modelBuilder.Entity("GastosHogarAPI.Models.PlanPago", b =>
                {
                    b.HasOne("GastosHogarAPI.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("AcreedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GastosHogarAPI.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("DeudorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GastosHogarAPI.Models.Grupo", null)
                        .WithMany()
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GastosHogarAPI.Models.Usuario", b =>
                {
                    b.HasOne("GastosHogarAPI.Models.Grupo", "Grupo")
                        .WithMany("Miembros")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("GastosHogarAPI.Models.Grupo", b =>
                {
                    b.Navigation("Gastos");

                    b.Navigation("Miembros");
                });

            modelBuilder.Entity("GastosHogarAPI.Models.PlanPago", b =>
                {
                    b.Navigation("Cuotas");
                });

            modelBuilder.Entity("GastosHogarAPI.Models.Usuario", b =>
                {
                    b.Navigation("Dispositivos");

                    b.Navigation("Gastos");
                });
#pragma warning restore 612, 618
        }
    }
}
